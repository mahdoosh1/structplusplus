{
  "items=list": {
    "0=Preprocessor(endian)": {
      "args=list": {
        "0": "little"
      }
    },
    "1=Preprocessor(noreserve)": {},
    "2=Struct(Pixel)": {
      "type": "struct",
      "block=Block": {
        "statements=list": {
          "0=DeclareStatement": {
            "name=Identifier": {
              "name": "blue"
            },
            "type=Identifier": {
              "name": "uint8"
            }
          },
          "1=DeclareStatement": {
            "name=Identifier": {
              "name": "green"
            },
            "type=Identifier": {
              "name": "uint8"
            }
          },
          "2=DeclareStatement": {
            "name=Identifier": {
              "name": "red"
            },
            "type=Identifier": {
              "name": "uint8"
            }
          }
        }
      }
    },
    "3=Struct(Pixel)": {
      "type": "memory",
      "block=MemoryBlock": {
        "code": "blue: uint8; \ngreen: uint8;\nred: uint8;"
      }
    },
    "4=Struct(File)": {
      "type": "struct",
      "block=Block": {
        "statements=list": {
          "0=DeclareStatement": {
            "name=Identifier": {
              "name": "file_header"
            },
            "type=Identifier": {
              "name": "FileHeader"
            }
          },
          "1=DeclareStatement": {
            "name=Identifier": {
              "name": "dib_header"
            },
            "type=Identifier": {
              "name": "DIBHeader"
            }
          },
          "2=DeclareStatement": {
            "name=Identifier": {
              "name": "pixels"
            },
            "type=Identifier": {
              "name": "PixelArray"
            },
            "default=CallExpression": {
              "args=list": {
                "0=FieldAccess": {
                  "target=Identifier": {
                    "name": "dib_header"
                  },
                  "field": "width"
                },
                "1=FieldAccess": {
                  "target=Identifier": {
                    "name": "dib_header"
                  },
                  "field": "height"
                },
                "2=FieldAccess": {
                  "target=Identifier": {
                    "name": "dib_header"
                  },
                  "field": "bpp"
                }
              }
            }
          }
        }
      }
    },
    "5=Struct(Memory)": {
      "type": "memory",
      "params=list": {
        "0=Identifier": {
          "name": "file"
        }
      },
      "block=MemoryBlock": {
        "code": "Pixel[ file.dib_header        .width][file.dib_header.height] Memory;"
      }
    },
    "6=Struct(FileHeader)": {
      "type": "struct",
      "block=Block": {
        "statements=list": {
          "0=DeclareStatement": {
            "name=Identifier": {
              "name": "magic"
            },
            "type=Size": {
              "value=NumberLiteral": {
                "raw": "2B",
                "kind": "size"
              }
            }
          },
          "1=DeclareStatement": {
            "name=Identifier": {
              "name": "file_size"
            },
            "type=Identifier": {
              "name": "uint32"
            }
          },
          "2=DeclareStatement": {
            "name=Identifier": {
              "name": "reserved"
            },
            "type=Size": {
              "value=NumberLiteral": {
                "raw": "4B",
                "kind": "size"
              }
            }
          },
          "3=DeclareStatement": {
            "name=Identifier": {
              "name": "pixel_offset"
            },
            "type=Identifier": {
              "name": "uint32"
            }
          }
        }
      }
    },
    "7=Struct(DIBHeader)": {
      "type": "struct",
      "block=Block": {
        "statements=list": {
          "0=DeclareStatement": {
            "name=Identifier": {
              "name": "header_size"
            },
            "type=Identifier": {
              "name": "uint32"
            }
          },
          "1=IfThenElse": {
            "if_=ConditionalBlock": {
              "statements=list": {
                "0=RaiseStmt": {
                  "message=StringLiteral": {
                    "value": "\"Invalid DIB header size\""
                  }
                }
              },
              "condition=BinaryOp": {
                "left=Identifier": {
                  "name": "header_size"
                },
                "op": "!=",
                "right=NumberLiteral": {
                  "raw": "40",
                  "kind": "integer"
                }
              }
            }
          },
          "2=DeclareStatement": {
            "name=Identifier": {
              "name": "width"
            },
            "type=Identifier": {
              "name": "uint32"
            }
          },
          "3=DeclareStatement": {
            "name=Identifier": {
              "name": "height"
            },
            "type=Identifier": {
              "name": "uint32"
            }
          },
          "4=DeclareStatement": {
            "name=Identifier": {
              "name": "planes"
            },
            "type=Identifier": {
              "name": "uint16"
            }
          },
          "5=IfThenElse": {
            "if_=ConditionalBlock": {
              "statements=list": {
                "0=RaiseStmt": {
                  "message=StringLiteral": {
                    "value": "\"BMP must have 1 plane\""
                  }
                }
              },
              "condition=BinaryOp": {
                "left=Identifier": {
                  "name": "planes"
                },
                "op": "!=",
                "right=NumberLiteral": {
                  "raw": "1",
                  "kind": "integer"
                }
              }
            }
          },
          "6=DeclareStatement": {
            "name=Identifier": {
              "name": "bpp"
            },
            "type=Identifier": {
              "name": "uint16"
            }
          },
          "7=IfThenElse": {
            "if_=ConditionalBlock": {
              "statements=list": {
                "0=RaiseStmt": {
                  "message=StringLiteral": {
                    "value": "\"Only 24-bit supported\""
                  }
                }
              },
              "condition=BinaryOp": {
                "left=Identifier": {
                  "name": "bpp"
                },
                "op": "!=",
                "right=NumberLiteral": {
                  "raw": "24",
                  "kind": "integer"
                }
              }
            }
          },
          "8=DeclareStatement": {
            "name=Identifier": {
              "name": "compression"
            },
            "type=Identifier": {
              "name": "uint32"
            }
          },
          "9=IfThenElse": {
            "if_=ConditionalBlock": {
              "statements=list": {
                "0=RaiseStmt": {
                  "message=StringLiteral": {
                    "value": "\"Only uncompressed supported\""
                  }
                }
              },
              "condition=BinaryOp": {
                "left=Identifier": {
                  "name": "compression"
                },
                "op": "!=",
                "right=NumberLiteral": {
                  "raw": "0",
                  "kind": "integer"
                }
              }
            }
          },
          "10=DeclareStatement": {
            "name=Identifier": {
              "name": "image_size"
            },
            "type=Identifier": {
              "name": "uint32"
            }
          },
          "11=DeclareStatement": {
            "name=Identifier": {
              "name": "x_ppm"
            },
            "type=Identifier": {
              "name": "uint32"
            }
          },
          "12=DeclareStatement": {
            "name=Identifier": {
              "name": "y_ppm"
            },
            "type=Identifier": {
              "name": "uint32"
            }
          },
          "13=DeclareStatement": {
            "name=Identifier": {
              "name": "colors_used"
            },
            "type=Identifier": {
              "name": "uint32"
            }
          },
          "14=DeclareStatement": {
            "name=Identifier": {
              "name": "important_colors"
            },
            "type=Identifier": {
              "name": "uint32"
            }
          }
        }
      }
    },
    "8=Struct(PixelRow)": {
      "type": "struct",
      "params=list": {
        "0=Identifier": {
          "name": "width"
        },
        "1=Identifier": {
          "name": "bpp"
        }
      },
      "block=Block": {
        "statements=list": {
          "0=DeclareStatement": {
            "name=Identifier": {
              "name": "pixels"
            },
            "type=Identifier": {
              "name": "Pixel"
            },
            "array_size=Identifier": {
              "name": "width"
            }
          },
          "1=DeclareStatement": {
            "name=Identifier": {
              "name": "padding"
            },
            "type=Identifier": {
              "name": "uint8"
            },
            "array_size=BinaryOp": {
              "left=BinaryOp": {
                "left=NumberLiteral": {
                  "raw": "4",
                  "kind": "integer"
                },
                "op": "-",
                "right=BinaryOp": {
                  "left=BinaryOp": {
                    "left=Identifier": {
                      "name": "width"
                    },
                    "op": "*",
                    "right=BinaryOp": {
                      "left=Identifier": {
                        "name": "bpp"
                      },
                      "op": "/",
                      "right=NumberLiteral": {
                        "raw": "8",
                        "kind": "integer"
                      }
                    }
                  },
                  "op": "%",
                  "right=NumberLiteral": {
                    "raw": "4",
                    "kind": "integer"
                  }
                }
              },
              "op": "%",
              "right=NumberLiteral": {
                "raw": "4",
                "kind": "integer"
              }
            }
          }
        }
      }
    },
    "9=Struct(PixelArray)": {
      "type": "struct",
      "params=list": {
        "0=Identifier": {
          "name": "width"
        },
        "1=Identifier": {
          "name": "height"
        },
        "2=Identifier": {
          "name": "bpp"
        }
      },
      "block=Block": {
        "statements=list": {
          "0=DeclareStatement": {
            "name=Identifier": {
              "name": "rows"
            },
            "type=Identifier": {
              "name": "PixelRow"
            },
            "array_size=Identifier": {
              "name": "height"
            },
            "default=CallExpression": {
              "args=list": {
                "0=Identifier": {
                  "name": "width"
                },
                "1=Identifier": {
                  "name": "bpp"
                }
              }
            }
          }
        }
      }
    }
  }
}